name: Deploy backend to VPS
run-name: ${{ github.actor }} deployed backend to VPS (${{ github.sha }})

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

env:
  DOCKERHUB_REPO_BACKEND: ${{ vars.DOCKERHUB_USERNAME }}/web-temps-reel-backend

jobs:
  publish_backend:
    runs-on: ubuntu-latest
    name: Publish backend image
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "./backend"
          push: true
          tags: ${{ env.DOCKERHUB_REPO_BACKEND }}:latest, ${{ env.DOCKERHUB_REPO_BACKEND }}:${{ github.sha }}

  # migrate_database:
  #   runs-on: ubuntu-latest
  #   name: Migrate database
  #   needs:
  #     - publish_backend
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up kubectl
  #       run: |
  #         mkdir -p ~/.kube
  #         echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
  #     - name: Change the image tag
  #       run: |
  #         sed "s/:latest/:${{ github.sha }}/g" backend/migration-job.yaml > backend/migration-job.yaml.tmp
  #     - name: Migrate database
  #       run: |
  #         kubectl apply -f backend/migration-job.yaml.tmp -n web-temps-reel
  #         kubectl wait --for=condition=complete --timeout=60s job/prisma-migration-job -n web-temps-reel
  #         kubectl delete -f backend/migration-job.yaml.tmp

  deploy_backend:
    runs-on: ubuntu-latest
    name: Deploy backend
    # needs:
    #   - migrate_database
    environment:
      name: production
      url: ${{ vars.URL }}
    concurrency: deploy
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
      - name: Redeploy
        run: |
          kubectl set image deployment/backend-deployment backend=${{ env.DOCKERHUB_REPO_BACKEND }}:${{ github.sha }} -n web-temps-reel
          kubectl rollout status deployment/backend-deployment -n web-temps-reel
